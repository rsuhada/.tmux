# select shell
set -g default-shell /bin/zsh
set-option -g default-command "reattach-to-user-namespace -l zsh"

# set prefix key
set-option -g prefix C-o
bind-key C-o last-window # might want to have the same as prefix

set -g default-terminal "screen-256color"
set-window-option -g utf8 on

# set-option default-path "$PWD"

######################################################################
# color theme

set-option -g status-justify left
set-option -g status-left-length 40
set-option -g status-right-length 100
set-option -g status-utf8 on

######################################################################
# status line

# Set window notifications
setw -g monitor-activity on
set -g visual-activity off


# # zenburn status bar #################################################
# set -g status-bg '#1c1c1c'
# set -g status-fg white

# # set-window-option -g window-status-bg black
# set-window-option -g window-status-bg '#1c1c1c'
# set-window-option -g window-status-fg '#7f7f7f'
# set-window-option -g window-status-attr bold

# set-window-option -g window-status-current-bg '#698b22' # green
# set-window-option -g window-status-current-fg '#1c1c1c'
# set-window-option -g window-status-current-attr bold

# set-option -g status-left '#[bold,fg=#698b22][#[bold,fg=white]#S#[default]#[bold,fg=#698b22]]['

# set -g status-right '#[bold,fg=#698b22]][#[fg=#7f7f7f]#11h#[bold,fg=#698b22]][#[bold,fg=white]%H:%M#[default]#[bold,fg=#698b22]]'
# # zenburn status bar #################################################

# solarized-dark status bar ##########################################
set -g status-bg '#002b36'
set -g status-fg white

# set-window-option -g window-status-bg black
set-window-option -g window-status-bg '#002b36'
set-window-option -g window-status-fg '#7f7f7f'
set-window-option -g window-status-attr bold

set-window-option -g window-status-current-bg '#698b22'
set-window-option -g window-status-current-fg '#002b36'
set-window-option -g window-status-current-attr bold

set-option -g status-left '#[bold,fg=#698b22][#[bold,fg=white]#S#[default]#[bold,fg=#698b22]]['
# set -g status-right '#[bold,fg=#698b22]][#[fg=white]#11h#[bold,fg=#698b22]][ #[fg=#7f7f7f]%d.%m. #[bold,fg=white]%H:%M#[default] #[bold,fg=#698b22]]'
set -g status-right '#[bold,fg=#698b22]][#[fg=#7f7f7f]#11h#[bold,fg=#698b22]][#[bold,fg=white]%H:%M#[default]#[bold,fg=#698b22]]'
# solarized-dark status bar ##########################################



# bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
bind C-k new-window -d -n tmux-zoom \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
bind C-l last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

# not working yet - joinin back
# bind C-k run "if [[ $(tmux list-window) =~ ZOOM ]]; then tmux last-window; tmux swap-pane -s ZOOM.0; tmux kill-window -t ZOOM; else tmux new-window -d -n ZOOM; tmux swap-pane -s ZOOM.0; tmux select-window -t ZOOM;fi"

## nicer pastel green/black

# set-option -g status-bg '#2e8b57'
# set-option -g status-fg white

# set-window-option -g window-status-bg '#000000'
# set-window-option -g window-status-fg '#2e8b57'

# set-window-option -g window-status-current-bg red
# set-window-option -g window-status-current-fg colour15
# set-window-option -g window-status-current-attr bold

# set-option -g status-left '#[bold,fg=black][#S]#[default]'
# set -g status-right '#[fg=green]][#[fg=white]#11h#[fg=green]][ #[fg=default]%d.%m. #[fg=yellow,bright]%H:%M#[default] #[fg=green]]'

######################################################################
# look and feel

# border colours
set -g pane-border-fg black
set -g pane-active-border-fg red
set -g pane-active-border-bg default
set -g pane-border-bg default

######################################################################
# misc. settings

# Automatically set window title
setw -g automatic-rename

# faster twi char commands
set -s escape-time 0
set -s repeat-time 1000

# start window indexing at one instead of zero
set -g base-index 1

# window title on top
set-option -g set-titles on
set-option -g set-titles-string '#S.#I.#P #W #T' # window number,program name,active (or not)

# history
set -g history-limit 100000

# Clock
setw -g clock-mode-colour green
setw -g clock-mode-style 24

# on-screen time for display-panes in ms
set -g display-panes-time 2000

######################################################################
# keybindings
set-window-option -g mode-keys emacs
# set-window-option -g mode-keys vi
set-window-option -g status-keys emacs

# how to bind commnad prompt to something easier?
# bind-key          ; command-prompt
# bind-key          t choose-session
bind-key          0 new-session
#' just fixing colors

# Reload key
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# splitting
unbind % # Remove default binding since we’re replacing
bind -r v split-window -h
bind -r h split-window -v

bind -r i select-window -t:-1
bind -r p select-window -t:+1

# quick view of processes - htop not working atm
# bind '-' split-window "exec htop"
bind '-' split-window "exec top"

# cycle through panes
bind-key -r          o last-pane
bind -r a select-pane -t :.+

# add chaining for common tasks
bind-key -r      Space next-layout

# todo: add automatic session for subprojects
bind-key -t emacs-copy 'SPACE' begin-selection
bind-key -t emacs-copy 'M-w' copy-selection

# keybindings to make resizing easier
bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R

# session
# initialize sessions
bind W source-file ~/.tmux/work.session

######################################################################
# mouse

# Enable mouse support
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
set-window-option -g mode-mouse on

# FIXME: https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard

######################################################################
######################################################################
######################################################################

# # Make it use C-a, similar to screen..
# unbind C-b
# unbind l
# set -g prefix C-a
# bind-key C-a last-window

# # Reload key
# bind r source-file ~/.tmux.conf

# set -g default-terminal "screen-256color"
# set -g history-limit 1000


# # THEME
# set -g status-bg black
# set -g status-fg white
# set -g status-interval 60
# set -g status-left-length 30
# set -g status-left '#[fg=green](#S) #(whoami)@#H#[default]'
# set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=blue]%H:%M#[default]'

# # set correct term
# set -g default-terminal screen-256color


# # keybindings to make resizing easier
# bind -r C-h resize-pane -L
# bind -r C-j resize-pane -D
# bind -r C-k resize-pane -U
# bind -r C-l resize-pane -R


######################################################################
# #---------------------------------------------------------------
# # file:     ~/.tmux/conf
# # author:   jason ryan - http://jasonwryan.com/
# # vim:fenc=utf-8:nu:ai:si:et:ts=4:sw=4:fdm=indent:fdn=1:ft=conf:
# #---------------------------------------------------------------
# # Based on Thayer Williams' (http://cinderwick.ca)

# # reload config without killing server
# bind R source-file ~/.tmux/conf \; display-message "  Config reloaded..".

# # copy tmux buffer to clipboard
# bind C-y run "tmux show-buffer | xsel -b"
# # move x clipboard into tmux paste buffer
# bind C-p run "tmux set-buffer \"$(xsel -o)\"; tmux paste-buffer"

# # pane selection
# bind Left select-pane -L
# bind Right select-pane -R
# bind Up select-pane -U
# bind Down select-pane -D

# # pane/window movement
# bind-key j command-prompt -p "join pane from:" "join-pane -s '%%'"
# bind-key s command-prompt -p "send pane to:" "join-pane -t '%%'"
# bind-key S command-prompt -p "swap window with:" "swap-window -t ':%%'"
# bind-key m command-prompt -p "move window to:" "move-window -t ':%%'"

# # quick view of processes
# bind '~' split-window "exec htop"

# # open {tmux,mutt,vim} man page
# bind-key T neww -n "Tmux manual" "exec man tmux"
# bind-key M neww -n "Mutt manual" "exec man mutt"
# bind-key V neww -n "Vim manual" "exec vim -c 'h user-manual|only'"

# # open %% man page
# bind C-m command-prompt -p "Open man page for:" "new-window 'exec man %%'"

# # send the prefix to client inside window (ala nested sessions)
# bind-key -n C-i send-prefix

# # toggle last window like screen
# bind-key C-b last-window

# # confirm before killing a window or the server
# bind-key k confirm kill-window
# bind-key K confirm kill-server

# # toggle statusbar
# bind-key b set-option status

# # ctrl+left/right cycles thru windows
# bind-key -n C-right next
# bind-key -n C-left prev

# # scrollback buffer n lines
# set -g history-limit 5000

# # listen for activity on all windows
# set -g bell-action any

# # on-screen time for display-panes in ms
# set -g display-panes-time 2000

# # start window indexing at one instead of zero
# set -g base-index 1

# # enable wm window titles
# set -g set-titles on

# # enable auto renaming
# setw -g automatic-rename on

# # border colours
# set -g pane-border-fg black
# set -g pane-active-border-fg green
# set -g pane-active-border-bg default
# set -g pane-border-bg default

# # wm window title string (uses statusbar variables)
# set -g set-titles-string "tmux:#I [ #W ]"

# # initialize sessions
# bind S source-file ~/.tmux/standard
# bind I source-file ~/.tmux/irssi

# # environment
# set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# # statusbar --------------------------------------------------------------
# set -g window-status-format "#I:#W"
# set -g window-status-current-format "#I:#W"

# set -g status-keys vi
# bind-key -t vi-edit Up history-up
# bind-key -t vi-edit Down history-down

# set -g status-interval 1
# set -g status-justify centre # center align window list

# # default statusbar colors
# set -g status-fg white
# set -g status-bg default

# # default window title colors
# set-window-option -g window-status-fg black
# set-window-option -g window-status-bg default
# set-window-option -g window-status-attr bright

# # active window title colors
# set-window-option -g window-status-current-fg white
# set-window-option -g window-status-current-bg default
# set-window-option -g window-status-current-attr bright

# # command/message line colors
# set -g message-fg white
# set -g message-bg black
# set -g message-attr bright

# # Statusbar starting in X or not
# if '[ -n "$DISPLAY" ]' 'source-file ~/.tmux/inx'
# if '[ -z "$DISPLAY" ]' 'source-file ~/.tmux/xless'


# bind F1 select-window -t 10
# bind F2 select-window -t 11
# bind F3 select-window -t 12
# bind F4 select-window -t 13
# bind F5 select-window -t 14
# bind F6 select-window -t 15
# bind F7 select-window -t 16
# bind F8 select-window -t 17
# bind F9 select-window -t 18
# bind F10 select-window -t 19
# bind F11 select-window -t 20
# bind F12 select-window -t 21


# ######################################################################
# # mouse support etc

# # First install tmux
# brew install tmux

# # For mouse support (for switching panes and windows)
# # Only needed if you are using Terminal.app (iTerm has mouse support)
# Install http://www.culater.net/software/SIMBL/SIMBL.php
# Then install https://bitheap.org/mouseterm/

# # More on mouse support http://floriancrouzat.net/2010/07/run-tmux-with-mouse-support-in-mac-os-x-terminal-app/

# # Enable mouse support in ~/.tmux.conf
# set-option -g mouse-select-pane on
# set-option -g mouse-select-window on
# set-window-option -g mode-mouse on

# # Install Teamocil to pre define workspaces
# https://github.com/remiprev/teamocil

# # See http://files.floriancrouzat.net/dotfiles/.tmux.conf for configuration examples

# ######################################################################



######################################################################
######################################################################
# setting up session from shell



# #!/bin/sh
# tmux new-session -d -s hawkhost

# tmux new-window -t hawkhost:1 -n 'Server1' 'ssh root@10.x.x.x'
# tmux new-window -t hawkhost:2 -n 'Server2' 'ssh root@10.x.x.x' tmux
# new-window -t hawkhost:3 -n 'Server3' 'ssh root@10.x.x.x' tmux
# new-window -t hawkhost:4 -n 'Server4' 'ssh root@10.x.x.x' tmux
# new-window -t hawkhost:5 -n 'Server5' 'ssh root@10.x.x.x'

# tmux select-window -t hawkhost:1
# tmux -2 attach-session -t hawkhost

# The command new-session -d -s hawkhost creates a new tmux session,
# detaches it (so it doesn’t open in your current terminal) and names it
# hawkhost in this case.

# The following set of new-window commands create five new windows and
# executes the command at the end. The arguments are broken down as
# follows: -t hawkhost :1 tells tmux to “target” the session hawkhost
# and the window with the id of 1. The -n ‘Server1′ ‘ssh root@10.x.x.x’
# portion tells tmux to name the window Server1 and execute the ssh
# root@10.x.x.x command in it.

# The last two commands are pretty straight forward. The select-window
# -t hawkhost:1 command tells tmux that you want the active window the
# session to be hawkhost and window 1. The -2 attach-session -t hawkhost
# tells tmux you want to attach the terminal with 256 colors and attach
# to the session hawkhost.


# ## keybindings
# unbind C-b
# unbind C-a
# unbind %
# unbind ,
# unbind .
# unbind n
# unbind p
# unbind [
# unbind '"'
# unbind l
# unbind &
# unbind "'"

# set-option -g prefix C-a # C-a for perfix just like screen

# bind-key C-a    last-window
# bind-key |      split-window -h
# bind-key \      split-window -h
# bind-key -      split-window -v
# bind-key x      kill-pane
# bind-key X      kill-window
# bind-key q      confirm-before kill-session
# bind-key Q      confirm-before kill-server
# bind-key ,      previous-window # <
# bind-key .      next-window     # >
# bind-key <      swap-window -t :-
# bind-key >      swap-window -t :+
# bind-key n      command-prompt 'rename-window %%'
# bind-key N      command-prompt 'rename-session %%'
# bind-key Escape copy-mode -u
# bind-key Up     copy-mode -u
# bind-key r      source-file ~/.tmux.conf; display-message " ✱ ~/.tmux.conf is reloaded"
# bind-key R      refresh-client
# bind-key a      send-key C-a
# bind-key C-j    resize-pane -L 5
# bind-key C-l    resize-pane -R 5
# bind-key C-k    resize-pane -D 5
# bind-key C-i    resize-pane -U 5


# ## set status bar
# set-option -g status-utf8 on
# set-option -g status-bg colour11
# set-option -g status-fg colour8

# #set-option -g status-left '⣿'
# #set-option -g status-right '⡇ #[bold]❐ #S:#I#[default] ⡇ #[bold]#(whoami) ● #H#[default] '
# #set-option -g status-right '⡇ ❐ #S ⡇ ❖ #(rvm tools identifier) ⡇ #(whti) ● #H '
# set-option -g status-left ' #[bold]❐ #S#[default] ⡇'
# set-option -g status-right '#[bold]#(whoami) ● #H#[default] '

# set-option -g status-right-length 60
# set-option -g status-left-length 60

# ## highlight active window
# set-window-option -g window-status-current-bg colour166
# set-window-option -g window-status-current-fg colour15
# set-window-option -g window-status-current-attr bold
# set-window-option -g window-status-current-format ' #I #W '

# ## set window notifications
# set-option -g visual-activity on
# set-option -g visual-content on
# set-window-option -g monitor-activity on
# set-window-option -g automatic-rename off

# ## tmux window titling for X
# set-option -g set-titles on
# set-option -g set-titles-string '[#I] #W'
# set-window-option -g automatic-rename on
# set-window-option -g window-status-format ' #I #W '
# set-window-option -g window-status-attr bold
# # starts windows at 1 not 0
# set-option -g base-index 1

# ## enable mouse
# set-option -g mouse-select-pane on
# set-window-option -g mode-keys vi
# set-window-option -g mode-mouse on
# # set-window-option -g monitor-activity off
# # set-window-option -g monitor-content off
# # set-option -g status-keys vi
# # set-option -g history-limit 4096

# ## pane border and colors
# set-option -g pane-active-border-fg yellow
# set-option -g pane-border-fg white